bool isPalindrome(string str){
    int i=0, j=str.length()-1;
    while(i<j){
        if(str[i]!=str[j]){
            return false;
        }
        i++;
        j--;
    }
    return true;
}

void do_partition(string A, string str, vector<string> &s, int ind, vector<vector<string> > &ans){
    if(ind==A.length() && str==""){
        ans.push_back(s);
        return;
    }
    if(ind==A.length()){
        return;
    }
    
    str += A[ind];
    if(isPalindrome(str)){
        s.push_back(str);
        do_partition(A, "", s, ind+1, ans);
        s.pop_back();
    }
    do_partition(A, str, s, ind+1, ans);
}

vector<vector<string> > Solution::partition(string A) {
    // Do not write main() function.
    // Do not read input, instead use the arguments to the function.
    // Do not print the output, instead return values as specified
    // Still have a doubt. Checkout www.interviewbit.com/pages/sample_codes/ for more details

    vector<string> s;
    vector<vector<string> > ans;
    do_partition(A, "", s, 0, ans);
    return ans;
}
