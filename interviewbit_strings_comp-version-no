int Solution::compareVersion(string A, string B) {
    //cout<<A.size()<<" "<<B.size()<<endl;
    int m = A.length(), n = B.length(), i=0, j=0;
    while(i<m && j<n){
        while(A[i]=='0' && i<m){
            i++;
        }
        while(B[j]=='0' && j<n){
            j++;
        }
        int k=i;
        unsigned long long int ans=0;
        while( k<m && A[k]!='.'){
            ans = ((ans*10) + (A[k] - (int)'1' +1));
            //cout<<i<<" "<<k<<" "<<ans<<endl;
            k++;
        }
        if(k==m)
            i = m;
        else
            i = k+1;
        k=j;
        unsigned long long int ans2=0;
        while(k<n && B[k]!='.'){
            ans2 = ((ans2*10) + (B[k] - (int)'1' +1));
            //cout<<j<<" "<<k<<" "<<ans2<<endl;
            k++;
        }
        if(k==n)
            j = n;
        else
            j = k+1;
        //cout<<i<<" "<<j<<" "<<ans<<" "<<ans2<<endl;
        if(ans>ans2){
            return 1;
        } else if(ans2>ans){
            return -1;
        }
    }
    
    if(i!=m){
        while(A[i]=='0' && i<m){
            i++;
        }
        if(i==m){
            return 0;
        } 
        return 1;
    }
    if(j!=n){
        while(B[j]=='0' && j<n){
            j++;
        }
        if(j==n){
            return 0;
        } 
        return -1;
    }
    return 0;
}
