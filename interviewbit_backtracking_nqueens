bool isSafe(vector<string> &board, int row, int col, int n){
    for(int i=0; i<row; i++){
        if(board[i][col]=='Q'){
            return false;
        }
    }
    for(int i=row, j=col; i>=0 && j>=0; i--, j--){
        if(board[i][j]=='Q'){
            return false;
        }
    }
    
    for(int i=row, j=col; i>=0 && j<n; i--, j++){
        if(board[i][j]=='Q'){
            return false;
        }
    }
    return true;
}

void solve(int n, int row, vector<string> &board, vector<vector<string> > &ans){
    if(row==n){
        ans.push_back(board);
        return;
    }
    for(int i=0; i<n; i++){
        if(isSafe(board, row, i, n)){
            board[row][i]='Q';
            solve(n, row+1, board, ans);
            board[row][i]='.';
        }
    }
}

vector<vector<string> > Solution::solveNQueens(int A) {
    // Do not write main() function.
    // Do not read input, instead use the arguments to the function.
    // Do not print the output, instead return values as specified
    // Still have a doubt. Checkout www.interviewbit.com/pages/sample_codes/ for more details

    vector<vector<string> > ans;
    vector<string> board;
    string s="";
    for(int i=0; i<A; i++){
        s+='.';
    }
    for(int i=0; i<A; i++){
        board.push_back(s);
    }
    
    solve(A, 0, board, ans);
    return ans;
}
