/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
 
 
int Solution::t2Sum(TreeNode* A, int B) {
    stack<TreeNode*> s1, s2;
     TreeNode* c1 = A, *c2 = A;
     while(!s1.empty() || c1){
         while(c1){
             s1.push(c1);
             c1 = c1->left;
         }
         while(c2){
             s2.push(c2);
             c2 = c2->right;
         }
         c1 = s1.top();
         c2 = s2.top();
         if(c1 == c2){
             return 0;
         }else if(c1->val+c2->val == B){
             return 1;
         }else if(c1->val + c2->val < B){
             s1.pop();
             c1 = c1->right;
             c2 = NULL;
         }else{
             s2.pop();
             c2 = c2->left;
             c1=NULL;
         }
     }
    return 0;
}
