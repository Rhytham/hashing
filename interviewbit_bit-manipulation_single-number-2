int max_shifts(const vector<int> &A){
    int ans=INT_MIN, exp=0;
    for(int i=0; i<A.size(); i++){
        if(ans<A[i]){
            ans = A[i];
        }
    }
    //cout<<ans<<endl;
    while(ans & ~0){
        exp++;
        ans = ans>>1;
    }
    //cout<<exp<<endl;
    return exp;
}

int Solution::singleNumber(const vector<int> &A) {
    int m = max_shifts(A);
    vector<int> ansv(m);
    for(int i=0; i<A.size();i++){
        int j=0, val=A[i];
        while(j<m){
            ansv[j] += (val&1);
            val = val>>1;
            j++;
        }
    }
    
    int ans=0, exp=0;
    for(int j=0; j<m; j++){
        ans += (ansv[j]%3)*(pow(2,exp));
        //cout<<ans<<endl;
        exp++;
    }
    return ans;
}
