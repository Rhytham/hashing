
int ans(int a1, int b1, int a2, int b2){
    int aa, ab, ba, bb;
    if((a1-a2)>=0){
        aa=a1;
        ab=a2;
    } else{
        aa=a2;
        ab=a1;
    }

    if((b1-b2)>=0){
        ba = b1;
        bb=b2;
    } else{
        ba=b2;
        bb=b1;
    }

    if(aa==ab){
        return(ba-bb);
    } else if(ba==bb){
        return(aa-ab);
    } else if((aa-ab)>=(ba-bb)){
        return((ba-bb) + ((aa-ab) - (ba-bb)));
    } else if((aa-ab)<(ba-bb)){
        return((aa-ab) + ((ba-bb) - (aa-ab)));
    }
}

int Solution::coverPoints(vector<int> &A, vector<int> &B) {
    int sum=0, n=A.size();
    for(int i=0;i<n-1;i++){
        sum += ans(A[i], B[i], A[i+1], B[i+1]);
    }

    return sum;
}

